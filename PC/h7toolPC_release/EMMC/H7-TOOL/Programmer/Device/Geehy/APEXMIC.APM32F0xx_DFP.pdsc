<?xml version="1.0" encoding="utf-8"?>
<package schemaVersion="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
	<vendor>APEXMIC</vendor>
	<url>https://v1.cecdn.yun300.cn/site_1807300217/</url>
	<name>APM32F0xx_DFP</name>
	<description>APEX Microelectronics APM32F00x Series Device Support</description>
	<releases>
		<release version="1.0.0" date="2020-06-15">
First Release version of APM32F0xx Device Family Pack.
		</release>
	</releases>
	<keywords>
		<!-- keywords for indexing -->
		<keyword>APEXMIC</keyword>
		<keyword>Device Support</keyword>
		<keyword>Device Family Package APEX Microelectronics</keyword>
		<keyword>APM32F0x</keyword>
		<keyword>APM32F0</keyword>
		<keyword>APM32</keyword>
	</keywords>
	<devices>
		<family Dfamily="APM32F0 Series" Dvendor="APEXMIC:153">
			<processor Dcore="Cortex-M0+" DcoreVersion="r0p0" Dfpu="0" Dmpu="0" Dendian="Little-endian"/>
			<book name="Documents/dui0552a_cortex_m0+_dgug.pdf" title="Cortex-M0+ Generic User Guide"/>
			<description>
        APEX Microelectronics' APM32F0 series of mainstream MCUs are 32-bit microprocessors based on ARM Cortex'-M0+ core, with a maximum operating frequency of 48MHz.
			</description>
			<!-- ******************************  APM32F030  ****************************** -->
			<subFamily DsubFamily="APM32F030">
				<!-- ******************************  APM32F030C8  ****************************** -->
				<device Dname="APM32F030C8">
					<processor Dclock="48000000"/>
					<compile header="Device\Include\apm32f0xx.h" define="APM32F030X8"/>
					<debug svd="SVD\APM32F030.svd"/>
					<memory id="IROM1" start="0x08000000" size="0x10000" startup="1" default="1"/>
					<memory id="IRAM1" start="0x20000000" size="0x2000" init="0" default="1"/>
					<algorithm name="Flash\APM32F0xx_64.FLM" start="0x08000000" size="0x10000" default="1"/>
					<book name="Documents/DATASHEET.pdf" title="APM32F0xx Data Sheet"/>
					<description>
            Core
            - ARM 32-bit Cortex-M0 CPU (48 MHz max)
            Memories
            - 16 to 64 Kbytes of Flash memory
            - 4 to 8 Kbytes of SRAM with HW parity checking
            CRC calculation unit
            Reset and power management
            - Voltage range: 2.4 V to 3.6 V
            - Power-on/Power down reset (POR/PDR)
            - Low power modes: Sleep, Stop, Standby
            Clock management
            - 4 to 32 MHz crystal oscillator
            - 32 kHz oscillator for RTC with calibration
            - Internal 8 MHz RC with x6 PLL option
            - Internal 40 kHz RC oscillator
            Up to 55 fast I/Os
            - All mappable on external interrupt vectors
            - Up to 36 I/Os with 5 V tolerant capability
            5-channel DMA controller
            12-bit, 1.0 us ADC (up to 16 channels)
            - Conversion range: 0 to 3.6 V
            - Separate analog supply from 2.4 up to 3.6 V
            Up to 10 timers
            - 16-bit 7-channel advanced-control timer for 6 channels PWM output
            - 16-bit timer, with up to 4 IC/OC
            - 16-bit timer, with 2 IC/OC, 1 OCN
            - 2 16-bit timers, each with IC/OC and OCN
            - 16-bit timer with 1 IC/OC
            - 16-bit basic timer
            - Independent and system watchdog timers
            - SysTick timer: 24-bit downcounter
            Calendar RTC with alarm and periodic wakeup from Stop/Standby
            Communication interfaces
            - Up to two I2C interfaces
            - Up to two USARTs supporting master synchronous SPI and modem control
            - Up to two SPIs (18 Mbit/s) with 4 to 16 programmable bit frame
            Serial wire debug (SWD)
					</description>
					<feature type="Timer" count="5" name="16-Bit Timer with Input Capture, Output Compare and PWM"/>
					<feature type="Timer" count="0" name="32-Bit Timer with Input Capture, Output Compare and PWM"/>
					<feature type="Timer" count="2" name="Watchdog"/>
					<feature type="Timer" count="1" name="RTC"/>
					<feature type="A/D" count="1" name="12-bit Analog to Digital Converter"/>
					<feature type="I/O" count="39" name="Input and Output Ports"/>
					<feature type="D/A" count="0" name="12-bit Digital to Analog Converter"/>
					<feature type="Com" count="2" name="SPI Interface"/>
					<feature type="Com" count="0" name="I2S Interface"/>
					<feature type="Com" count="2" name="I2C Interface"/>
					<feature type="Com" count="2" name="USART Interface"/>
				</device>
				<!-- ******************************  APM32F030R8  ****************************** -->
				<device Dname="APM32F030R8">
					<processor Dclock="48000000"/>
					<compile header="Device\Include\apm32f0xx.h" define="APM32F030X8"/>
					<debug svd="SVD\APM32F030.svd"/>
					<memory id="IROM1" start="0x08000000" size="0x10000" startup="1" default="1"/>
					<memory id="IRAM1" start="0x20000000" size="0x2000" init="0" default="1"/>
					<algorithm name="Flash\APM32F0xx_64.FLM" start="0x08000000" size="0x10000" default="1"/>
					<book name="Documents/DATASHEET.pdf" title="APM32F0xx Data Sheet"/>
					<description>
            Core
            - ARM 32-bit Cortex-M0 CPU (48 MHz max)
            Memories
            - 16 to 64 Kbytes of Flash memory
            - 4 to 8 Kbytes of SRAM with HW parity checking
            CRC calculation unit
            Reset and power management
            - Voltage range: 2.4 V to 3.6 V
            - Power-on/Power down reset (POR/PDR)
            - Low power modes: Sleep, Stop, Standby
            Clock management
            - 4 to 32 MHz crystal oscillator
            - 32 kHz oscillator for RTC with calibration
            - Internal 8 MHz RC with x6 PLL option
            - Internal 40 kHz RC oscillator
            Up to 55 fast I/Os
            - All mappable on external interrupt vectors
            - Up to 36 I/Os with 5 V tolerant capability
            5-channel DMA controller
            12-bit, 1.0 us ADC (up to 16 channels)
            - Conversion range: 0 to 3.6 V
            - Separate analog supply from 2.4 up to 3.6 V
            Up to 10 timers
            - 16-bit 7-channel advanced-control timer for 6 channels PWM output
            - 16-bit timer, with up to 4 IC/OC
            - 16-bit timer, with 2 IC/OC, 1 OCN
            - 2 16-bit timers, each with IC/OC and OCN
            - 16-bit timer with 1 IC/OC
            - 16-bit basic timer
            - Independent and system watchdog timers
            - SysTick timer: 24-bit downcounter
            Calendar RTC with alarm and periodic wakeup from Stop/Standby
            Communication interfaces
            - Up to two I2C interfaces
            - Up to two USARTs supporting master synchronous SPI and modem control
            - Up to two SPIs (18 Mbit/s) with 4 to 16 programmable bit frame
            Serial wire debug (SWD)
					</description>
					<feature type="Timer" count="5" name="16-Bit Timer with Input Capture, Output Compare and PWM"/>
					<feature type="Timer" count="0" name="32-Bit Timer with Input Capture, Output Compare and PWM"/>
					<feature type="Timer" count="2" name="Watchdog"/>
					<feature type="Timer" count="1" name="RTC"/>
					<feature type="A/D" count="1" name="12-bit Analog to Digital Converter"/>
					<feature type="I/O" count="55" name="Input and Output Ports"/>
					<feature type="D/A" count="0" name="12-bit Digital to Analog Converter"/>
					<feature type="Com" count="2" name="SPI Interface"/>
					<feature type="Com" count="0" name="I2S Interface"/>
					<feature type="Com" count="2" name="I2C Interface"/>
					<feature type="Com" count="2" name="USART Interface"/>
				</device>
			</subFamily>
		</family>
	</devices>
	<conditions>
		<!-- conditions are dependecy rules that can apply to a component or an individual file -->
		<condition id="Compiler ARM">
			<!-- conditions selecting ARM Compiler -->
			<require Tcompiler="ARMCC"/>
		</condition>
		<condition id="APM32F03">
			<description>APEX Microelectronics APM32F030 Series devices</description>
			<require Dname="APM32F03*"/>
		</condition>
		<condition id="APM32F030x8">
			<description>APEX Microelectronics APM32F030 Series devices</description>
			<require Dname="APM32F030?8"/>
		</condition>
		<condition id="APM32F0xx CMSIS Device">
			<!-- conditions selecting Devices -->
			<description>APEX Microelectronics APM32F0 Series devices and CMSIS-CORE</description>
			<require Cclass="CMSIS" Cgroup="CORE"/>
			<require Dvendor="APEXMIC:153" Dname="APM32F0????"/>
		</condition>
		<condition id="APM32F0xx STDPERIPH">
			<description>APEX Microelectronics APM32F1xx with Standard Peripherals Drivers Framework</description>
			<require condition="APM32F0xx CMSIS Device"/>
			<require Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="Framework"/>
		</condition>
		<condition id="APM32F0xx STDPERIPH RCM">
			<description>APEX Microelectronics APM32F1xx with Standard Peripherals Drivers Framework and RCM</description>
			<require condition="APM32F0xx CMSIS Device"/>
			<require Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="Framework"/>
			<require Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="RCM"/>
		</condition>
	</conditions>
	<components>
		<component Cclass="Device" Cgroup="APM32F0xx Startup" Cversion="1.0.0" condition="APM32F0xx CMSIS Device">
			<!-- Cversion is necessary -->
			<description>System Startup for APEX Microelectronics APM32F0xx Series</description>
			<files>
				<!-- startup files -->
				<file category="source" name="Device\Source\ARM\startup_apm32f030x8.s" attr="config" condition="APM32F030x8"/>
				<!-- system file -->
				<file category="source" name="Device\Source\system_apm32f0xx.c" attr="config" condition="APM32F03"/>
			</files>
		</component>
		<!-- START: APEX Microelectronics Standard Peripherals Drivers -->
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="Framework" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>Standard Peripherals Drivers Framework</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_FRAMEWORK</RTE_Components_h>
			<files>
				<file category="include" name="Device/StdPeriph_Driver/inc/"/>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_misc.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_misc.c"/>
				<file category="source" name="Device/StdPeriph_Driver/templates/inc/apm32f0xx_conf.h" attr="config" version="1.0.0"/>
				<file category="header" name="Device/StdPeriph_Driver/templates/inc/apm32f0xx_int.h" attr="template" select="Interrupt Service Routines"/>
				<file category="source" name="Device/StdPeriph_Driver/templates/src/apm32f0xx_int.c" attr="template" select="Interrupt Service Routines"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="ADC" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Analog-to-digital converter (ADC) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_ADC </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_adc.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_adc.c"/>
			</files>
		</component>
		
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="CRC" Cversion="1.0.0" condition="APM32F0xx STDPERIPH ">
			<description>CRC calculation unit (CRC) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_CRC      </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_crc.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_crc.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="DBG" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>MCU debug component (DBGMCU) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_DBG</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_dbg.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_dbg.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="DMA" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>DMA controller (DMA) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_DMA      </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_dma.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_dma.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="EINT" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>External interrupt/event controller (EINT) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_EINT </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_eint.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_eint.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="FMC" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>Flash memory controller driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_FMC     </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_fmc.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_fmc.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="GPIO" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>General-purpose I/O (GPIO) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_GPIO      </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_gpio.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_gpio.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="I2C" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Inter-integrated circuit (I2C) interface driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_I2C      </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_i2c.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_i2c.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="IWDT" Cversion="1.0.0" condition="APM32F0xx STDPERIPH ">
			<description>Independent watchdog (IWDT) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_IWDT</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_iwdt.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_iwdt.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="PMU" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Power controller (PMU) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_PMU</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_pmu.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_pmu.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="RCM" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>Reset and clock management unit (RCM) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_RCM</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_rcm.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_rcm.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="RTC" Cversion="1.0.0" condition="APM32F0xx STDPERIPH">
			<description>Real-Time Clock (RTC) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_RTC</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_rtc.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_rtc.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="SPI" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Serial peripheral interface (SPI) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_SPI      </RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_spi.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_spi.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="TMR" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Timers (TMR) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_TMR</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_tmr.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_tmr.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="USART" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Universal synchronous asynchronous receiver transmitter (USART) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_USART</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_usart.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_usart.c"/>
			</files>
		</component>
		<component Cclass="Device" Cgroup="APM32F0xx StdPeriph Drivers" Csub="WWDT" Cversion="1.0.0" condition="APM32F0xx STDPERIPH RCM">
			<description>Window watchdog (WWDT) driver for APM32F0xx</description>
			<RTE_Components_h>#define RTE_DEVICE_STDPERIPH_WWDT</RTE_Components_h>
			<files>
				<file category="header" name="Device/StdPeriph_Driver/inc/apm32f0xx_wwdt.h"/>
				<file category="source" name="Device/StdPeriph_Driver/src/apm32f0xx_wwdt.c"/>
			</files>
		</component>
		<!-- END: APEX Microelectronics Standard Peripherals Drivers -->
	</components>
	
	<boards>
		<board vendor="APEXMIC" name="APM32F030MINI" revision="Ver 1.0">
			<description>APEXMIC APM32F030 Development Board</description>
			<mountedDevice    deviceIndex="0" Dvendor="APEXMIC:153" Dname="APM32F030R8"/>
			<compatibleDevice deviceIndex="0" Dvendor="APEXMIC:153" DsubFamily="APM32F030"/>
			<feature type="XTAL"            n="8000000"/>
			<feature type="PWR"             n="5"              name="USB Powered"/>
			<feature type="USB"             n="1"              name="USB 2.0 Full Speed Device"/>
			<feature type="RS232"           n="1"/>
			<feature type="Button"          n="3"              name="Reset, KEY1 and KEY2"/>
			<feature type="LED"             n="3"              name="LEDs directly connected to port pins"/>
			<debugInterface adapter="SW" />
		</board>
		
	</boards>
	
	<examples>
		<example name="Blinky" doc="Abstract.txt" folder="Boards/APEXMIC/APM32F030MINI/Blinky">
			<description>APM32F030_MINI  Blinky example</description>
			<board name="APM32F030MINI" vendor="APEXMIC"/>
			<project>
				<environment name="uv" load="Blinky.uvprojx"/>
			</project>
			<attributes>
				<component Cclass="CMSIS" Cgroup="CORE"/>
				<component Cclass="Device" Cgroup="Startup"/>
				<component Cclass="CMSIS" Cgroup="RTOS"/>
				<category>Getting Started</category>
				<category>CMSIS-RTX</category>
				<keyword>LED</keyword>
			</attributes>
		</example>
	</examples>
	
</package>